{"version":3,"sources":["logo.svg","components/ListQuestion.js","components/FormCreate.js","App.js","reportWebVitals.js","index.js"],"names":["ListQuestion","style","height","className","Button","variant","FormCreate","Container","Form","Row","Col","Label","Control","placeholder","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,I,iECqCAA,EAhCM,WAGjB,OACE,qBAAKC,MAAO,CAAEC,OAAQ,SAAWC,UAAU,0DAA3C,SACE,cAACC,EAAA,EAAD,CAAQD,UAAU,OAAOE,QAAQ,UAAjC,6BCiDOC,EAtDI,WAEjB,OACE,cAACC,EAAA,EAAD,CAAWJ,UAAU,SAArB,SACE,eAACK,EAAA,EAAD,WACE,mBAAGL,UAAU,kBAAb,SAA+B,gDAC/B,cAACM,EAAA,EAAD,CAAKN,UAAU,OAAf,SACE,eAACO,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,YAAY,0BAI9B,cAACJ,EAAA,EAAD,CAAKN,UAAU,OAAf,SACE,eAACO,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,YAAY,4BAI9B,eAACJ,EAAA,EAAD,CAAKN,UAAU,OAAf,UACE,eAACO,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,MAAN,qCACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,YAAY,6BAE5B,eAACH,EAAA,EAAD,WACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcE,KAAK,eAIvB,mBAAGX,UAAU,cAAb,SAA2B,4CAE3B,cAACM,EAAA,EAAD,CAAKN,UAAU,OAAf,SACE,cAACO,EAAA,EAAD,UACE,cAAC,EAAD,QAKJ,sBAAKP,UAAU,0BAAf,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUF,UAAU,MAAMW,KAAK,SAA/C,yBAGA,cAACV,EAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,aAAaW,KAAK,SAApD,6B,KC/BKC,MATf,WACE,OACE,cAACR,EAAA,EAAD,CAAWJ,UAAU,YAArB,SACE,cAAC,EAAD,OCASa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7f4bdfc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Button, Table } from 'react-bootstrap';\r\n\r\nlet empty = true;\r\nconst ListQuestion = () => {\r\n\r\n  if (empty)\r\n    return (\r\n      <div style={{ height: \"200px\" }} className=\"border d-flex justify-content-center align-items-center\">\r\n        <Button className=\"px-3\" variant=\"primary\">Add Question</Button>\r\n      </div>\r\n    )\r\n  else return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Text</th>\r\n          <th>Type</th>\r\n          <th>Choices</th>\r\n          <th>Points</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Lorem Ipsum</td>\r\n          <td>Multiple Choice</td>\r\n          <td>5</td>\r\n          <td>10</td>\r\n          <td>a</td>\r\n        </tr>\r\n\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\nexport default ListQuestion;","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport ListQuestion from './ListQuestion'\r\n\r\nconst FormCreate = () => {\r\n\r\n  return (\r\n    <Container className=\"border\">\r\n      <Form >\r\n        <p className=\"text-center m-0\"><b>Create a Quiz</b></p>\r\n        <Row className='mb-3'>\r\n          <Col>\r\n            <Form.Label>Quiz Title</Form.Label>\r\n            <Form.Control placeholder=\"Enter Quiz Title\" />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className='mb-4'>\r\n          <Col>\r\n            <Form.Label>Total Points</Form.Label>\r\n            <Form.Control placeholder=\"Enter Total Points\" />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className='mb-4'>\r\n          <Col>\r\n            <Form.Label>Time Allowed (minutes)</Form.Label>\r\n            <Form.Control placeholder=\"Enter Time in minutes\" />\r\n          </Col>\r\n          <Col>\r\n            <Form.Label>Deadline</Form.Label>\r\n            <Form.Control type=\"date\" />\r\n          </Col>\r\n        </Row>\r\n\r\n        <p className=\"text-center\"><b>Questions</b></p>\r\n\r\n        <Row className='mb-4'>\r\n          <Col>\r\n            <ListQuestion />\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n        <div className=\"d-flex flex-row-reverse\">\r\n          <Button variant=\"primary\" className=\"m-2\" type=\"button\">\r\n            Create Quiz\r\n        </Button>\r\n          <Button variant=\"light\" className=\"m-2 border\" type=\"button\">\r\n            Cancel\r\n        </Button>\r\n        </div>\r\n\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormCreate;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport React from \"react\"\nimport FormCreate from './components/FormCreate'\nimport Question from './components/Question'\n\nimport { Container } from \"react-bootstrap\"\n\nfunction App() {\n  return (\n    <Container className=\"mt-5 w-50\">\n      <FormCreate />\n      {/* <Qulestion /> */}\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}